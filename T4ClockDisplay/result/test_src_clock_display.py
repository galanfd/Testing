# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).
# Please check them before you use them.
import pytest
import src.clock_display as module_0
import src.display_number as module_1


def test_case_0():
    bytes_0 = b"8\x1b\x1f\xef\x05\x921l\xb6@\xf3]-\x08Y\xae"
    clock_display_0 = module_0.ClockDisplay(bytes_0)
    var_0 = clock_display_0.increment()


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    clock_display_0 = module_0.ClockDisplay(list_0)
    var_0 = clock_display_0.clone()
    var_1 = clock_display_0.invariant()
    assert var_1 is True
    var_2 = var_0.increment()
    clock_display_1 = module_0.ClockDisplay(list_0)
    var_3 = clock_display_0.increment()
    var_4 = var_0.str()
    assert var_4 == "00:00:00"
    var_1.str()


@pytest.mark.xfail(strict=True)
def test_case_2():
    set_0 = set()
    clock_display_0 = module_0.ClockDisplay(set_0)
    var_0 = clock_display_0.invariant()
    module_0.ClockDisplay(clock_display_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "_t d"
    clock_display_0 = module_0.ClockDisplay(str_0)
    var_0 = clock_display_0.str()
    assert var_0 == "00:00:00:00"
    clock_display_0.increment()


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    clock_display_0 = module_0.ClockDisplay(dict_0)
    var_0 = clock_display_0.clone()
    var_1 = clock_display_0.increment()
    var_1.str()


def test_case_5():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    clock_display_0 = module_0.ClockDisplay(list_0)
    var_0 = clock_display_0.increment()


@pytest.mark.xfail(strict=True)
def test_case_6():
    set_0 = set()
    clock_display_0 = module_0.ClockDisplay(set_0)
    var_0 = clock_display_0.increment()
    var_1 = clock_display_0.invariant()
    number_display_0 = module_1.NumberDisplay(set_0, set_0)
    number_display_0.str()


@pytest.mark.xfail(strict=True)
def test_case_7():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    clock_display_0 = module_0.ClockDisplay(list_0)
    var_0 = clock_display_0.clone()
    var_1 = var_0.invariant()
    assert var_1 is True
    var_2 = clock_display_0.invariant()
    assert var_2 is True
    var_3 = clock_display_0.increment()
    int_0 = -812
    int_1 = -1006
    tuple_0 = (int_0, int_1, var_2)
    clock_display_1 = module_0.ClockDisplay(tuple_0)
    var_4 = clock_display_1.increment()
    var_2.str()
